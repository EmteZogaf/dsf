<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">

    <property name="json" value="JSONB" dbms="postgresql" />
    <property name="json" value="varchar(5000)" dbms="h2" />

    <changeSet author="retwet" id="db.groups.changelog-0.1.0">
        <createTable tableName="groups">
            <column name="group_id" type="UUID">
                <constraints nullable="false" />
            </column>
            <column name="version" type="BIGINT" defaultValueNumeric="1">
                <constraints nullable="false" />
            </column>
            <column name="deleted" type="BOOLEAN" defaultValue="false">
                <constraints nullable="false" />
            </column>
            <!-- caveat: json column cannot be named group, because group is a reserved word in sql -->
            <column name="group_json" type="${json}">
                <constraints nullable="false" />
            </column>
        </createTable>

        <addPrimaryKey tableName="groups" columnNames="group_id, version" />

        <sql dbms="postgresql">
            ALTER TABLE groups OWNER TO ${db.liquibase_user};
            GRANT ALL ON TABLE groups TO ${db.liquibase_user};
            GRANT SELECT, INSERT, UPDATE ON TABLE groups TO ${db.server_users_group};
            CREATE INDEX group_id_index ON groups USING btree (group_id);
            CREATE INDEX group_index ON groups USING gin (group_json);
            CREATE INDEX group_id_version_index ON groups USING btree (group_id, version);
        </sql>

        <createView viewName="current_groups" replaceIfExists="true">
            SELECT DISTINCT ON (group_id) group_id, version, group_json
            FROM groups WHERE NOT deleted ORDER BY group_id, version DESC
        </createView>

        <sql dbms="postgresql">
            ALTER TABLE current_groups OWNER TO ${db.liquibase_user};
            GRANT ALL ON TABLE current_groups TO ${db.liquibase_user};
            GRANT SELECT ON TABLE current_groups TO ${db.server_users_group};
        </sql>
    </changeSet>
</databaseChangeLog>